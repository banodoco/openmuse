// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './database.types';

const SUPABASE_URL = "https://ujlwuvkrxlvoswwkerdf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqbHd1dmtyeGx2b3N3d2tlcmRmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3ODM1MDYsImV4cCI6MjA1NzM1OTUwNn0.htwJHr4Z4NlMZYVrH1nNGkU53DyBTWgMeOeUONYFy_4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    }
  }
);

// Helper function to retrieve asset media relationships for debugging
export const debugAssetMedia = async (assetId: string) => {
  const { data, error } = await supabase
    .rpc('debug_asset_media', { asset_id: assetId });
  
  if (error) {
    console.error('Error fetching asset media relationships:', error);
    return null;
  }
  
  return data;
};

// Test RLS permissions to ensure proper data access
export const testRLSPermissions = async () => {
  const results = {
    assetsAccess: false,
    mediaAccess: false
  };
  
  // Test assets access
  try {
    const { data: assetsData, error: assetsError } = await supabase
      .from('assets')
      .select('id')
      .limit(1);
      
    results.assetsAccess = !assetsError && Array.isArray(assetsData);
  } catch (error) {
    console.error('Error testing assets access:', error);
  }
  
  // Test media access
  try {
    const { data: mediaData, error: mediaError } = await supabase
      .from('media')
      .select('id')
      .limit(1);
      
    results.mediaAccess = !mediaError && Array.isArray(mediaData);
  } catch (error) {
    console.error('Error testing media access:', error);
  }
  
  return results;
};
